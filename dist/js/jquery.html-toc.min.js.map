{"version":3,"sources":["jquery.html-toc.js"],"names":["$","HtmlToc","element","options","this","$toc","$root","CollapsibleLists","createClickListener","node","e","window","event","li","target","srcElement","nodeName","parentNode","toggle","open","className","match","uls","getElementsByTagName","index","length","style","display","replace","apply","doNotRecurse","document","applyTo","subUls","subIndex","lis","addEventListener","preventDefault","attachEvent","returnValue","prototype","build","tag","newItem","newList","headerClass","last","_init","stack","each","el","title","text","link","attr","prop","_rank","push","item","append","children","lastRoot","pop","parent","ul","header","parseInt","substring","fn","htmlToc","opts","extend","defaults","cssFile","jQuery"],"mappings":"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","file":"jquery.html-toc.min.js","sourcesContent":["/**\r\n* html-toc - version 0.0.1 - 25-08-2016\r\n* Add easier navigation for your website with this table of contents generator\r\n* Copyright (c) 2016 - RobyRodriguez\r\n* Licensed under MIT \r\n*/\r\n;\r\n(function ($) {\r\n\t/*\r\n\r\n\t CollapsibleLists.js\r\n\r\n\t An object allowing lists to dynamically expand and collapse\r\n\r\n\t Created by Stephen Morley - http://code.stephenmorley.org/ - and released under\r\n\t the terms of the CC0 1.0 Universal legal code:\r\n\r\n\t http://creativecommons.org/publicdomain/zero/1.0/legalcode\r\n\r\n\t */\r\n\t// create the CollapsibleLists object\r\n\tvar CollapsibleLists = new function () {\r\n\t\t/* Makes all lists with the class 'collapsibleList' collapsible. The\r\n\t\t * parameter is:\r\n\t\t *\r\n\t\t * doNotRecurse - true if sub-lists should not be made collapsible\r\n\t\t */\r\n\t\tthis.apply = function (doNotRecurse) {\r\n\t\t\t// loop over the unordered lists\r\n\t\t\tvar uls = document.getElementsByTagName('ul');\r\n\t\t\tfor (var index = 0; index < uls.length; index++) {\r\n\t\t\t\t// check whether this list should be made collapsible\r\n\t\t\t\tif (uls[index].className.match(/(^| )collapsibleList( |$)/)) {\r\n\t\t\t\t\t// make this list collapsible\r\n\t\t\t\t\tthis.applyTo(uls[index], true);\r\n\t\t\t\t\t// check whether sub-lists should also be made collapsible\r\n\t\t\t\t\tif (!doNotRecurse) {\r\n\t\t\t\t\t\t// add the collapsibleList class to the sub-lists\r\n\t\t\t\t\t\tvar subUls = uls[index].getElementsByTagName('ul');\r\n\t\t\t\t\t\tfor (var subIndex = 0; subIndex < subUls.length; subIndex++) {\r\n\t\t\t\t\t\t\tsubUls[subIndex].className += ' collapsibleList';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\t/* Makes the specified list collapsible. The parameters are:\r\n\t\t *\r\n\t\t * node         - the list element\r\n\t\t * doNotRecurse - true if sub-lists should not be made collapsible\r\n\t\t */\r\n\t\tthis.applyTo = function (node, doNotRecurse) {\r\n\t\t\t// loop over the list items within this node\r\n\t\t\tvar lis = node.getElementsByTagName('li');\r\n\t\t\tfor (var index = 0; index < lis.length; index++) {\r\n\t\t\t\t// check whether this list item should be collapsible\r\n\t\t\t\tif (!doNotRecurse || node == lis[index].parentNode) {\r\n\t\t\t\t\t// prevent text from being selected unintentionally\r\n\t\t\t\t\tif (lis[index].addEventListener) {\r\n\t\t\t\t\t\tlis[index].addEventListener('mousedown', function (e) {\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t}, false);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlis[index].attachEvent('onselectstart', function () {\r\n\t\t\t\t\t\t\tevent.returnValue = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// add the click listener\r\n\t\t\t\t\tif (lis[index].addEventListener) {\r\n\t\t\t\t\t\tlis[index].addEventListener('click', createClickListener(lis[index]), false);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlis[index].attachEvent('onclick', createClickListener(lis[index]));\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// close the unordered lists within this list item\r\n\t\t\t\t\ttoggle(lis[index]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\t/* Returns a function that toggles the display status of any unordered\r\n\t\t * list elements within the specified node. The parameter is:\r\n\t\t *\r\n\t\t * node - the node containing the unordered list elements\r\n\t\t */\r\n\t\tfunction createClickListener(node) {\r\n\t\t\t// return the function\r\n\t\t\treturn function (e) {\r\n\t\t\t\t// ensure the event object is defined\r\n\t\t\t\tif (!e) e = window.event;\r\n\t\t\t\t// find the list item containing the target of the event\r\n\t\t\t\tvar li = (e.target ? e.target : e.srcElement);\r\n\t\t\t\twhile (li.nodeName != 'LI') li = li.parentNode;\r\n\t\t\t\t// toggle the state of the node if it was the target of the event\r\n\t\t\t\tif (li == node) toggle(node);\r\n\t\t\t};\r\n\t\t}\r\n\t\t/* Opens or closes the unordered list elements directly within the\r\n\t\t * specified node. The parameter is:\r\n\t\t *\r\n\t\t * node - the node containing the unordered list elements\r\n\t\t */\r\n\t\tfunction toggle(node) {\r\n\t\t\t// determine whether to open or close the unordered lists\r\n\t\t\tvar open = node.className.match(/(^| )collapsibleListClosed( |$)/);\r\n\t\t\t// loop over the unordered list elements with the node\r\n\t\t\tvar uls = node.getElementsByTagName('ul');\r\n\t\t\tfor (var index = 0; index < uls.length; index++) {\r\n\t\t\t\t// find the parent list item of this unordered list\r\n\t\t\t\tvar li = uls[index];\r\n\t\t\t\twhile (li.nodeName != 'LI') li = li.parentNode;\r\n\t\t\t\t// style the unordered list if it is directly within this node\r\n\t\t\t\tif (li == node) uls[index].style.display = (open ? 'block' : 'none');\r\n\t\t\t}\r\n\t\t\t// remove the current class from the node\r\n\t\t\tnode.className = node.className.replace(/(^| )collapsibleList(Open|Closed)( |$)/, '');\r\n\t\t\t// if the node contains unordered lists, set its class\r\n\t\t\tif (uls.length > 0) {\r\n\t\t\t\tnode.className += ' collapsibleList' + (open ? 'Open' : 'Closed');\r\n\t\t\t}\r\n\t\t}\r\n\t}();\r\n\t/**\r\n\t * Constructor for the html-toc\r\n\t *\r\n\t * @param element\r\n\t * @param options\r\n\t * @constructor\r\n\t */\r\n\tfunction HtmlToc(element, options) {\r\n\t\tthis.$toc = $(element);\r\n\t\tthis.$root = null;\r\n\t\tthis.options = options;\r\n\t}\r\n\t/**\r\n\t * Builds the table of contents\r\n\t */\r\n\tHtmlToc.prototype.build = function () {\r\n\t\tvar headerClass = this.options.headerClass || \"\";\r\n\t\tvar last = this._init(),\r\n\t\t\tstack = [], // keep track of depth\r\n\t\t\ttag, // last tag processed\r\n\t\t\tnewItem, newList;\r\n\t\t$(headerClass + \":header\").each(function () {\r\n\t\t\tvar el = $(this),\r\n\t\t\t\ttitle = el.text(),\r\n\t\t\t\tlink = \"#\" + el.attr(\"id\");\r\n\t\t\t// init if necessary\r\n\t\t\ttag = tag || el.prop(\"tagName\");\r\n\t\t\tif (tag !== el.prop(\"tagName\")) {\r\n\t\t\t\tif (HtmlToc._rank(tag) < HtmlToc._rank(el.prop(\"tagName\"))) {\r\n\t\t\t\t\t// going deeper - keep track of last known item\r\n\t\t\t\t\tstack.push({\r\n\t\t\t\t\t\titem: newItem,\r\n\t\t\t\t\t\ttag: tag\r\n\t\t\t\t\t});\r\n\t\t\t\t\tnewList = $('<ul></ul>');\r\n\t\t\t\t\tnewItem = $(\"<li><a href='\" + link + \"'>\" + title + \"</a></li>\");\r\n\t\t\t\t\tnewList.append(newItem);\r\n\t\t\t\t\tlast.children().last().append(newList);\r\n\t\t\t\t\t// update last root\r\n\t\t\t\t\tlast = newList;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// going back one (or multiple) level(s)\r\n\t\t\t\t\tvar lastRoot = stack.pop();\r\n\t\t\t\t\twhile (HtmlToc._rank(lastRoot.tag) !== HtmlToc._rank(el.prop(\"tagName\"))) {\r\n\t\t\t\t\t\tlastRoot = stack.pop();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlast = lastRoot.item.parent();\r\n\t\t\t\t\tnewItem = $(\"<li><a href='\" + link + \"'>\" + title + \"</a></li>\");\r\n\t\t\t\t\tlast.append(newItem);\r\n\t\t\t\t}\r\n\t\t\t\ttag = el.prop(\"tagName\");\r\n\t\t\t} else {\r\n\t\t\t\tnewItem = $(\"<li><a href='\" + link + \"'>\" + title + \"</a></li>\");\r\n\t\t\t\tlast.append(newItem);\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.$toc.append(this.$root);\r\n\t\tCollapsibleLists.applyTo(this.$root[0]);\r\n\t};\r\n\t/**\r\n\t * Builds customizable main root where the collapsible-lists tree is attached\r\n\t *\r\n\t * @private\r\n\t */\r\n\tHtmlToc.prototype._init = function () {\r\n\t\tvar title = this.options.title || \"Table of contents\";\r\n\t\tthis.$root = $('<ul id=\"toc-menu\" class=\"treeView\"></ul>');\r\n\t\tvar li = $('<li class=\"root\">' + title + '</li>');\r\n\t\tvar ul = $('<ul></ul>');\r\n\t\tli.append(ul);\r\n\t\tthis.$root.append(li);\r\n\t\treturn ul;\r\n\t};\r\n\t//TODO can't u just make a closure on all of this and make _* methods private\r\n\t/**\r\n\t * Returns the number of the html heading\r\n\t *\r\n\t * @param header\r\n\t * @returns {Number}\r\n\t * @private\r\n\t */\r\n\tHtmlToc._rank = function (header) {\r\n\t\treturn parseInt(header.substring(1));\r\n\t};\r\n\t/**\r\n\t * Plugin definition\r\n\t *\r\n\t * @param options\r\n\t */\r\n\t$.fn.htmlToc = function (options) {\r\n\t\t// if user options given apply, else use defaults\r\n\t\tvar opts = $.extend({}, $.fn.htmlToc.defaults, options || {});\r\n\t\t// add css\r\n\t\tif ($('head > link[href=\"' + opts.cssFile + '\"]').length == 0) {\r\n\t\t\t$('head').append('<link rel=\"stylesheet\" type=\"text/css\" href=\"' + opts.cssFile + '\" /> ');\r\n\t\t}\r\n\t\t// keep chainability\r\n\t\treturn this.each(function () {\r\n\t\t\tnew HtmlToc(this, opts).build()\r\n\t\t});\r\n\t};\r\n\t/**\r\n\t * Default plugin options\r\n\t *\r\n\t * @type {{cssFile: string}}\r\n\t */\r\n\t$.fn.htmlToc.defaults = {\r\n\t\tcssFile: 'https://github.com/roby-rodriguez/html-toc/dist/css/jquery.html-toc.min.css'\r\n\t};\r\n})(jQuery);\n"]}